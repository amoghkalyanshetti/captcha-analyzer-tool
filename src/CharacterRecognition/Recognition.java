/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package CharacterRecognition;

import java.awt.image.BufferedImage;
import java.awt.image.PixelGrabber;

/**
 *
 * @author Shree Ganesh
 */
public class Recognition {
    String decodedStr="";
    Thread rec_thread[]=new Thread[65];
    public static double result[]=new double[62];
    public String recognizeCharacters(BufferedImage seg[])//accepts segments
    {
        for(int i=0;i<seg.length;i++)
        {
            decodedStr+=getCharacter(seg[i]);//processes each segments
        }
       return decodedStr; 
    }
    
    synchronized char getCharacter(BufferedImage br)
    { 
           int pixelMap[]=new int[500];
        try
           {
                              PixelGrabber pg = new PixelGrabber(br, 0, 0, 20, 20,pixelMap, 0,20);
                             pg.grabPixels();
                
            }

       catch (Exception e)
             {
                               System.out.println("Exception generated by grabPixel()");
                              
             }
        ANN a=new ANN(pixelMap,20,20);
        a.calculate();
        for(int i=0;i<62;i++) //running threads
        {
                 
                     rec_thread[i]=new CharacterThreads(i);
                     rec_thread[i].start();
                     
        }
           
              
                   
         for(int q=0;q<62;q++)
                {
                    try
                    {
                        rec_thread[q].join();
                        
                    }
                    catch(Exception e)
                    {
                       System.out.println("error in joining"); 
                    }
                }
                 /*  if(result==Recognition.result)
                    {
                        System.out.println("syfyusfysssssssssssssssssssssssssssssssssssssssssssssssss");
                    }*/ 
         pixelMap=null;
                int index=0;
                double max=0;
                for(int i=0;i<62;i++)//finding max
                {
                    //System.out.println("probability:" +result[i]);
                    if(result[i]>max)
                    {
                        max=result[i];
                        index=i;
                    }
                }
                
         
             // System.out.println("index="+index); 
              
               if(index<10)
               {
                //   index=index+65;
                     return (char)(index+48);
               }
                else if(index >= 10 && index < 36)
               {
                    index=index+65-10;
                    return (char)index;
               }
               else 
               {
                     index=index+97-36;
                     return (char)index;
               }
               
             
    }          
 }

