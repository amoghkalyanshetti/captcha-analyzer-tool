/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
//latest version
import CAT.CommonUtilityClass;
import CAT.ImageInfo;
import CAT.Main;
import Segmentation.Scale;
import java.awt.Color;
import java.awt.Frame;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import static java.awt.image.ImageObserver.WIDTH;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import preprocessing.Binarization;
import strength.*;

/**
 *
 * @author amoghk
 */
public class StrengthImprovementCaptcha extends javax.swing.JFrame {

    Main m1;
    int counter=0;
    int rotationInput;
    BufferedImage modifiedImage,mBackUp;//the improved captcha image
    BufferedImage temp;//the temporary improved image
    BufferedImage bin;//for displaying modified histogram
    StrengthImprovement si;
    CommonUtilityClass util;
     boolean lineFlagPoint1=false,lineFlagPoint2=false,manualDotFlag=false,changeCharColorFlag=false;
    HistogramX hx;
    HistogramY hy;
    Binarization bnryObj;
    Color c;
    int x1,y1,x2,y2;
//    static String suggestions;
    /**
     * Creates new form StrengthImprovementCaptcha
     */
    public StrengthImprovementCaptcha() {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")).getScaledInstance(600,254, WIDTH));
        util=new CommonUtilityClass();
        
        bnryObj=new Binarization();
        initComponents();
           parentPanel.removeAll();
        parentPanel.add(blankPanel);
        parentPanel.repaint();
        parentPanel.revalidate();    
       // this.setResizable(false);
    }

    public void setComponents(Main m) throws IOException
    {
        m1=m;
        si=new StrengthImprovement(m1);
        File f[]=new File("ImgOutput\\PreprocessingImgOutput\\BinarizedImgOutput\\").listFiles();
        image2.setIcon(new ImageIcon(Scale.scale_img(m1.img,352,98)));
        modifiedImage=StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(m1.img,352,98));
       image1.setIcon(new ImageIcon(modifiedImage));
        hx=new HistogramX(StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(m1.img,352,98)));
        hy=new HistogramY(StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(m1.img,352,98)));
        temp=modifiedImage;
        mBackUp=modifiedImage;
        //StrengthImprovement st =new StrengthImprovement();
       
     //   setSuggestion(suggestions);
        si.getDBConnection();
        si.getSuggestion();
        jTextArea1.setLineWrap(true);
        jTextArea1.setWrapStyleWord(true);
         
       
        
    }
    static public void setSuggestion(String suggestion)
    {
        jTextArea1.setText(jTextArea1.getText()+"\n>"+suggestion);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.S
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        image1 = new javax.swing.JLabel();
        image2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        changes = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        addDotButton = new javax.swing.JButton();
        addLineButton = new javax.swing.JButton();
        changeBgButton = new javax.swing.JButton();
        changeCharColor = new javax.swing.JButton();
        invertImageButton = new javax.swing.JButton();
        rotateButton = new javax.swing.JButton();
        binarizeButton = new javax.swing.JButton();
        distortedImageButton = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        parentPanel = new javax.swing.JPanel();
        addManualDotPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageManualDotTextArea = new javax.swing.JTextArea();
        addManualDotOkButton = new javax.swing.JButton();
        blankPanel = new javax.swing.JPanel();
        automaticAddDotPanel = new javax.swing.JPanel();
        automaticDotIntensitySlider = new javax.swing.JSlider();
        automaticDotIntensityCurrentVal = new javax.swing.JLabel();
        automaticDotAddButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        messageAutomaticDotTextArea = new javax.swing.JTextArea();
        rotatePanel = new javax.swing.JPanel();
        rotateSlider = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();
        rotationInputValueTextField = new javax.swing.JTextField();
        rotationOkButton = new javax.swing.JButton();
        InvertImagePanel = new javax.swing.JPanel();
        invertImageOkButton = new javax.swing.JButton();
        addDotPanel = new javax.swing.JPanel();
        manualAddDotButton = new javax.swing.JButton();
        automaticAddDotButton = new javax.swing.JButton();
        binarizePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        inputThreshold = new javax.swing.JTextField();
        binarizeOkButton = new javax.swing.JButton();
        addLinePanel = new javax.swing.JPanel();
        LineSelector = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        getColorValButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        messageLineAdd = new javax.swing.JTextArea();
        changeCharColorPanel = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        messageAutomaticDotTextArea1 = new javax.swing.JTextArea();
        getColorValButton1 = new javax.swing.JButton();
        changeCharColorButton = new javax.swing.JButton();
        changeBgImagePanel = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        messageManualDotTextArea1 = new javax.swing.JTextArea();
        rotationOkButton1 = new javax.swing.JButton();
        distortedPanel = new javax.swing.JPanel();
        distortedMessage = new javax.swing.JLabel();
        automaticDotAddButton1 = new javax.swing.JButton();
        origImgButton = new javax.swing.JButton();

        setTitle("STRENGTH IMPROVEMENT OF CAPTCHA");
        setBounds(new java.awt.Rectangle(200, 5, 0, 0));
        setPreferredSize(new java.awt.Dimension(1100, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowDeiconified(java.awt.event.WindowEvent evt) {
                formWindowDeiconified(evt);
            }
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
        });

        jLabel1.setText("ATTACKS");

        jPanel2.setBackground(java.awt.SystemColor.window);
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        image1.setBackground(new java.awt.Color(255, 255, 255));
        image1.setToolTipText("the loaded captcha");
        image1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        image1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        image1.setName(""); // NOI18N
        image1.setOpaque(true);
        image1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                image1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                image1MousePressed(evt);
            }
        });
        image1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                image1MouseDragged(evt);
            }
        });

        image2.setBackground(new java.awt.Color(255, 255, 255));
        image2.setToolTipText("the loaded captcha");
        image2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        image2.setName(""); // NOI18N
        image2.setOpaque(true);

        jLabel4.setText("Original Captcha");

        jLabel5.setText("Modified Captcha");

        changes.setBackground(java.awt.SystemColor.window);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(changes, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(image2, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(image1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(134, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(image2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(1, 1, 1)
                .addComponent(image1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(changes, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton10.setText("Back");
        jButton10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(java.awt.SystemColor.window);
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel4.setPreferredSize(new java.awt.Dimension(110, 1000));

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel9.setText("Suggestions on Improving Captcha");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(java.awt.SystemColor.window);
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel3.setForeground(java.awt.SystemColor.controlShadow);

        addDotButton.setText("Add Dot");
        addDotButton.setToolTipText("");
        addDotButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addDotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDotButtonActionPerformed(evt);
            }
        });

        addLineButton.setText("Add Line");
        addLineButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addLineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLineButtonActionPerformed(evt);
            }
        });

        changeBgButton.setText("Change Background ");
        changeBgButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        changeBgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeBgButtonActionPerformed(evt);
            }
        });

        changeCharColor.setText("Change Character Color");
        changeCharColor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        changeCharColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeCharColorActionPerformed(evt);
            }
        });

        invertImageButton.setText("Invert Image");
        invertImageButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        invertImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invertImageButtonActionPerformed(evt);
            }
        });

        rotateButton.setText("Rotate");
        rotateButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        rotateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotateButtonActionPerformed(evt);
            }
        });

        binarizeButton.setText("Binarize");
        binarizeButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        binarizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binarizeButtonActionPerformed(evt);
            }
        });

        distortedImageButton.setText("Distort Image");
        distortedImageButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        distortedImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                distortedImageButtonActionPerformed(evt);
            }
        });

        jButton8.setText("SAVE");
        jButton8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addLineButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(changeBgButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(changeCharColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(invertImageButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(rotateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(binarizeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(addDotButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(distortedImageButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(addDotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(addLineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(changeCharColor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(changeBgButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(invertImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(rotateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(binarizeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(distortedImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        parentPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        parentPanel.setLayout(new java.awt.CardLayout());

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        messageManualDotTextArea.setEditable(false);
        messageManualDotTextArea.setBackground(new java.awt.Color(240, 240, 240));
        messageManualDotTextArea.setColumns(20);
        messageManualDotTextArea.setRows(5);
        messageManualDotTextArea.setText("\nPlease add\ndots on the \nCaptcha Image \nBy Clicking On It");
        messageManualDotTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(messageManualDotTextArea);

        addManualDotOkButton.setText("APPLY");
        addManualDotOkButton.setToolTipText("make changes permanently");
        addManualDotOkButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addManualDotOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addManualDotOkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addManualDotPanelLayout = new javax.swing.GroupLayout(addManualDotPanel);
        addManualDotPanel.setLayout(addManualDotPanelLayout);
        addManualDotPanelLayout.setHorizontalGroup(
            addManualDotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addManualDotPanelLayout.createSequentialGroup()
                .addGroup(addManualDotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addManualDotPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addManualDotPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(addManualDotOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addManualDotPanelLayout.setVerticalGroup(
            addManualDotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addManualDotPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(addManualDotOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(160, Short.MAX_VALUE))
        );

        parentPanel.add(addManualDotPanel, "card3");

        javax.swing.GroupLayout blankPanelLayout = new javax.swing.GroupLayout(blankPanel);
        blankPanel.setLayout(blankPanelLayout);
        blankPanelLayout.setHorizontalGroup(
            blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        blankPanelLayout.setVerticalGroup(
            blankPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        parentPanel.add(blankPanel, "card4");

        automaticDotIntensitySlider.setMaximum(29);
        automaticDotIntensitySlider.setValue(0);
        automaticDotIntensitySlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                automaticDotIntensitySliderStateChanged(evt);
            }
        });

        automaticDotAddButton.setText("APPLY");
        automaticDotAddButton.setToolTipText("make changes permanently");
        automaticDotAddButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        automaticDotAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automaticDotAddButtonActionPerformed(evt);
            }
        });

        jScrollPane4.setBorder(null);
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        messageAutomaticDotTextArea.setEditable(false);
        messageAutomaticDotTextArea.setBackground(new java.awt.Color(240, 240, 240));
        messageAutomaticDotTextArea.setColumns(20);
        messageAutomaticDotTextArea.setRows(5);
        messageAutomaticDotTextArea.setText("\nPlease specify \nthe intensity of\ndots in the \nslider\n");
        messageAutomaticDotTextArea.setWrapStyleWord(true);
        jScrollPane4.setViewportView(messageAutomaticDotTextArea);

        javax.swing.GroupLayout automaticAddDotPanelLayout = new javax.swing.GroupLayout(automaticAddDotPanel);
        automaticAddDotPanel.setLayout(automaticAddDotPanelLayout);
        automaticAddDotPanelLayout.setHorizontalGroup(
            automaticAddDotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, automaticAddDotPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(automaticAddDotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(automaticDotIntensitySlider, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
            .addGroup(automaticAddDotPanelLayout.createSequentialGroup()
                .addGroup(automaticAddDotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(automaticAddDotPanelLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(automaticDotIntensityCurrentVal, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(automaticAddDotPanelLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(automaticDotAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        automaticAddDotPanelLayout.setVerticalGroup(
            automaticAddDotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(automaticAddDotPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(automaticDotIntensitySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(automaticDotIntensityCurrentVal, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(automaticDotAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );

        parentPanel.add(automaticAddDotPanel, "card5");

        rotateSlider.setMaximum(60);
        rotateSlider.setMinimum(-60);
        rotateSlider.setValue(0);
        rotateSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rotateSliderStateChanged(evt);
            }
        });

        jLabel6.setText("Rotation");

        rotationInputValueTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        rotationInputValueTextField.setText("0");
        rotationInputValueTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotationInputValueTextFieldActionPerformed(evt);
            }
        });

        rotationOkButton.setText("APPLY");
        rotationOkButton.setToolTipText("make changes permanently");
        rotationOkButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        rotationOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotationOkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rotatePanelLayout = new javax.swing.GroupLayout(rotatePanel);
        rotatePanel.setLayout(rotatePanelLayout);
        rotatePanelLayout.setHorizontalGroup(
            rotatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rotatePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rotatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rotatePanelLayout.createSequentialGroup()
                        .addComponent(rotateSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rotatePanelLayout.createSequentialGroup()
                        .addGap(0, 52, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(60, 60, 60))
                    .addGroup(rotatePanelLayout.createSequentialGroup()
                        .addComponent(rotationOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rotatePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rotationInputValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        rotatePanelLayout.setVerticalGroup(
            rotatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rotatePanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel6)
                .addGap(31, 31, 31)
                .addComponent(rotateSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rotationInputValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                .addComponent(rotationOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        parentPanel.add(rotatePanel, "card6");

        invertImageOkButton.setText("APPLY");
        invertImageOkButton.setToolTipText("make changes permanently");
        invertImageOkButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        invertImageOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invertImageOkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InvertImagePanelLayout = new javax.swing.GroupLayout(InvertImagePanel);
        InvertImagePanel.setLayout(InvertImagePanelLayout);
        InvertImagePanelLayout.setHorizontalGroup(
            InvertImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InvertImagePanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(invertImageOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        InvertImagePanelLayout.setVerticalGroup(
            InvertImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InvertImagePanelLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(invertImageOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        parentPanel.add(InvertImagePanel, "card7");

        addDotPanel.setBackground(java.awt.SystemColor.window);

        manualAddDotButton.setText("Manual");
        manualAddDotButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 255), 1, true));
        manualAddDotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualAddDotButtonActionPerformed(evt);
            }
        });

        automaticAddDotButton.setText("Automatic");
        automaticAddDotButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 255), 1, true));
        automaticAddDotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automaticAddDotButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addDotPanelLayout = new javax.swing.GroupLayout(addDotPanel);
        addDotPanel.setLayout(addDotPanelLayout);
        addDotPanelLayout.setHorizontalGroup(
            addDotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(automaticAddDotButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(manualAddDotButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addDotPanelLayout.setVerticalGroup(
            addDotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addDotPanelLayout.createSequentialGroup()
                .addContainerGap(160, Short.MAX_VALUE)
                .addComponent(manualAddDotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(automaticAddDotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(137, 137, 137))
        );

        parentPanel.add(addDotPanel, "card2");

        jLabel2.setText("Specify Threshold");

        inputThreshold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputThresholdActionPerformed(evt);
            }
        });

        binarizeOkButton.setText("APPLY");
        binarizeOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binarizeOkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout binarizePanelLayout = new javax.swing.GroupLayout(binarizePanel);
        binarizePanel.setLayout(binarizePanelLayout);
        binarizePanelLayout.setHorizontalGroup(
            binarizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(binarizePanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(binarizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(binarizeOkButton)
                    .addGroup(binarizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inputThreshold)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        binarizePanelLayout.setVerticalGroup(
            binarizePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(binarizePanelLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jLabel2)
                .addGap(48, 48, 48)
                .addComponent(inputThreshold, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(binarizeOkButton)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        parentPanel.add(binarizePanel, "card8");

        addLinePanel.setBackground(java.awt.SystemColor.window);

        LineSelector.setModel(new javax.swing.DefaultComboBoxModel(new String[] { ".................", "_ _ _ _ _ _ _ _", "_ __ __ __ _ _" }));
        LineSelector.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                LineSelectorItemStateChanged(evt);
            }
        });
        LineSelector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LineSelectorActionPerformed(evt);
            }
        });

        jLabel8.setText("Select the type of Line");

        jButton1.setText("APPLY");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getColorValButton.setText("Specify Line Color");
        getColorValButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getColorValButtonActionPerformed(evt);
            }
        });

        jScrollPane5.setBorder(null);
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        messageLineAdd.setEditable(false);
        messageLineAdd.setColumns(20);
        messageLineAdd.setRows(5);
        messageLineAdd.setWrapStyleWord(true);
        jScrollPane5.setViewportView(messageLineAdd);

        javax.swing.GroupLayout addLinePanelLayout = new javax.swing.GroupLayout(addLinePanel);
        addLinePanel.setLayout(addLinePanelLayout);
        addLinePanelLayout.setHorizontalGroup(
            addLinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addLinePanelLayout.createSequentialGroup()
                .addGroup(addLinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addLinePanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(addLinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addLinePanelLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(addLinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LineSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(getColorValButton)))))
                    .addGroup(addLinePanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addLinePanelLayout.setVerticalGroup(
            addLinePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addLinePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(LineSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(getColorValButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        parentPanel.add(addLinePanel, "card9");

        jScrollPane6.setBorder(null);
        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane6.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        messageAutomaticDotTextArea1.setEditable(false);
        messageAutomaticDotTextArea1.setBackground(new java.awt.Color(240, 240, 240));
        messageAutomaticDotTextArea1.setColumns(20);
        messageAutomaticDotTextArea1.setRows(5);
        messageAutomaticDotTextArea1.setText("Please click on \nthe image to \nchange color");
        messageAutomaticDotTextArea1.setWrapStyleWord(true);
        jScrollPane6.setViewportView(messageAutomaticDotTextArea1);

        getColorValButton1.setText("Specify  Color");
        getColorValButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getColorValButton1ActionPerformed(evt);
            }
        });

        changeCharColorButton.setText("APPLY");
        changeCharColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeCharColorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout changeCharColorPanelLayout = new javax.swing.GroupLayout(changeCharColorPanel);
        changeCharColorPanel.setLayout(changeCharColorPanelLayout);
        changeCharColorPanelLayout.setHorizontalGroup(
            changeCharColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changeCharColorPanelLayout.createSequentialGroup()
                .addGroup(changeCharColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changeCharColorPanelLayout.createSequentialGroup()
                        .addContainerGap(15, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(changeCharColorPanelLayout.createSequentialGroup()
                        .addGroup(changeCharColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(changeCharColorPanelLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(getColorValButton1))
                            .addGroup(changeCharColorPanelLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(changeCharColorButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        changeCharColorPanelLayout.setVerticalGroup(
            changeCharColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changeCharColorPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(getColorValButton1)
                .addGap(46, 46, 46)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(changeCharColorButton)
                .addGap(0, 142, Short.MAX_VALUE))
        );

        parentPanel.add(changeCharColorPanel, "card10");

        jButton2.setText("Browse");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        messageManualDotTextArea1.setEditable(false);
        messageManualDotTextArea1.setBackground(new java.awt.Color(240, 240, 240));
        messageManualDotTextArea1.setColumns(20);
        messageManualDotTextArea1.setRows(5);
        messageManualDotTextArea1.setText("Browse the \nrequired \nbackground image\nto be kept as a \nbackground");
        messageManualDotTextArea1.setWrapStyleWord(true);
        jScrollPane3.setViewportView(messageManualDotTextArea1);

        rotationOkButton1.setText("APPLY");
        rotationOkButton1.setToolTipText("make changes permanently");
        rotationOkButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        rotationOkButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotationOkButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout changeBgImagePanelLayout = new javax.swing.GroupLayout(changeBgImagePanel);
        changeBgImagePanel.setLayout(changeBgImagePanelLayout);
        changeBgImagePanelLayout.setHorizontalGroup(
            changeBgImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changeBgImagePanelLayout.createSequentialGroup()
                .addGroup(changeBgImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(changeBgImagePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(changeBgImagePanelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(changeBgImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(rotationOkButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        changeBgImagePanelLayout.setVerticalGroup(
            changeBgImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changeBgImagePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(rotationOkButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        parentPanel.add(changeBgImagePanel, "card11");

        automaticDotAddButton1.setText("APPLY");
        automaticDotAddButton1.setToolTipText("make changes permanently");
        automaticDotAddButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        automaticDotAddButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                automaticDotAddButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout distortedPanelLayout = new javax.swing.GroupLayout(distortedPanel);
        distortedPanel.setLayout(distortedPanelLayout);
        distortedPanelLayout.setHorizontalGroup(
            distortedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(distortedPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(distortedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(automaticDotAddButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(distortedMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        distortedPanelLayout.setVerticalGroup(
            distortedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(distortedPanelLayout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(distortedMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(automaticDotAddButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );

        parentPanel.add(distortedPanel, "card12");

        origImgButton.setText("RELOAD ORIGINAL IMAGE");
        origImgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                origImgButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(parentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(origImgButton, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119))))
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel1)
                .addGap(367, 993, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(parentPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(origImgButton))
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        hx.setVisible(false);
        hy.setVisible(false);
        //new GUI().setVisible(true);
        
    }//GEN-LAST:event_jButton10ActionPerformed

    
    private void rotateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotateButtonActionPerformed
          manualDotFlag=false;
        changeCharColorFlag=false;
        lineFlagPoint1=false;
        lineFlagPoint2=false;
        parentPanel.removeAll();
        parentPanel.add(rotatePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        modifiedImage=mBackUp;
        image1.setIcon(new ImageIcon(Scale.scale_img(modifiedImage,352,98)));
        changes.setText("");
        rotateSlider.setValue(0);
        rotationInputValueTextField.setText(String.valueOf(0));
                
        // TODO add your handling code here:
    }//GEN-LAST:event_rotateButtonActionPerformed

    private void manualAddDotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manualAddDotButtonActionPerformed
    
         lineFlagPoint1=false;
      lineFlagPoint2=false;
      changeCharColorFlag=false;
      manualDotFlag=true;
        parentPanel.removeAll();
        parentPanel.add(addManualDotPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        //setCaptchaGraphics();
        // TODO add your handling code here:
    }//GEN-LAST:event_manualAddDotButtonActionPerformed
//    void setCaptchaGraphics()
//    {
//        Graphics2D g=modifiedImage.createGraphics();
//        
//    }
    private void automaticAddDotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automaticAddDotButtonActionPerformed

       parentPanel.removeAll();
        parentPanel.add(automaticAddDotPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        automaticDotIntensitySlider.setValue(0);
        
        // TODO add your handling code here:
    }//GEN-LAST:event_automaticAddDotButtonActionPerformed

    private void addManualDotOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addManualDotOkButtonActionPerformed
save();
        // TODO add your handling code here:
    }//GEN-LAST:event_addManualDotOkButtonActionPerformed

    private void addDotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDotButtonActionPerformed
        
        manualDotFlag=false;
        changeCharColorFlag=false;
        lineFlagPoint1=false;
        lineFlagPoint2=false;
        parentPanel.removeAll();
        parentPanel.add(addDotPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        modifiedImage=mBackUp;
        image1.setIcon(new ImageIcon(modifiedImage));
        changes.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_addDotButtonActionPerformed

    private void automaticDotAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automaticDotAddButtonActionPerformed
        //m1.img=dottedImage;
       save();
        // TODO add your handling code here:
    }//GEN-LAST:event_automaticDotAddButtonActionPerformed

    private void automaticDotIntensitySliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_automaticDotIntensitySliderStateChanged
         int intensity=automaticDotIntensitySlider.getValue();  
        automaticDotIntensityCurrentVal.setText(String.valueOf(intensity));
        //temp=m1.img;
       // BufferedImage img=new BufferedImage(m1.img.getWidth(),m1.img.getHeight(),BufferedImage.TYPE_INT_RGB);
        temp=si.addDot(modifiedImage,(29-intensity));
        image1.setIcon(new ImageIcon(temp));
        changeHistogram();
        // TODO add your handling code here:
    }//GEN-LAST:event_automaticDotIntensitySliderStateChanged

    private void rotateSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rotateSliderStateChanged

         rotationInput=rotateSlider.getValue();
        rotationInputValueTextField.setText(String.valueOf(rotationInput));
        rotate();
      changeHistogram();
// TODO add your handling code here:
    }//GEN-LAST:event_rotateSliderStateChanged
     public void changeHistogram()
     {
        hx.changeImage(StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(temp,352,98)));
        hy.changeImage(StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(temp,352,98)));
     }
    public void changeHistogramBinarized(int threshold)
    {
          //Preprocessing
        System.out.println("From here");
                bin= bnryObj.getBinaryImage(bnryObj.convertOrgToGray(modifiedImage),threshold);
                 //temp=new BufferedImage(bin.getWidth(),bin.getHeight(),BufferedImage.TYPE_INT_ARGB);
                temp=StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(bin,352,98));
                //temp=bin;
                image1.setIcon(new ImageIcon(temp));
               
          hx.changeImage(StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(bin,352,98)));
        hy.changeImage(StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(bin,352,98)));
    }
    private void rotationInputValueTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotationInputValueTextFieldActionPerformed
      try{
        rotationInput=Integer.parseInt(rotationInputValueTextField.getText());
        if(rotationInput<=60 && rotationInput>=-60)
        {
            rotate();
            rotateSlider.setValue(rotationInput);
            changeHistogram();
        }
           else
             JOptionPane.showMessageDialog(rootPane, "please select a value between -60 and 60", null, JOptionPane.ERROR_MESSAGE);
      }
      catch(NumberFormatException e)
      {
          JOptionPane.showMessageDialog(rootPane, "please enter a valid integer", null, JOptionPane.ERROR_MESSAGE);
      }
        // TODO add your handling code here:
    }//GEN-LAST:event_rotationInputValueTextFieldActionPerformed

    private void rotationOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotationOkButtonActionPerformed
         save();
    }//GEN-LAST:event_rotationOkButtonActionPerformed
 public void save()
 {
     
     mBackUp=modifiedImage=temp;
        changes.setText("                      Changes Applied Successfully!!");
 }
    private void image1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_image1MouseClicked
//if(b1){
//        int x=evt.getX();
//        int y=evt.getY();
//        System.out.println("x="+x+" y="+y);
//        if(b)
//            temp=modifiedImage;
//        b=false;
//       
//        temp=StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(temp, 280,117));
//        image1.setIcon(new ImageIcon(temp));
//        temp=si.addDot(temp,x,y);
//        image1.setIcon(new ImageIcon(temp));
//}
// TODO add your handling code here:
    }//GEN-LAST:event_image1MouseClicked
public static BufferedImage toBufferedImage(Image img)
{
    if (img instanceof BufferedImage)
    {
        return (BufferedImage) img;
    }

    // Create a buffered image with transparency
    BufferedImage bimage = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB);

    // Draw the image on to the buffered image
    Graphics2D bGr = bimage.createGraphics();
    bGr.drawImage(img, 0, 0, null);
    bGr.dispose();

    // Return the buffered image
    return bimage;
}
    private void invertImageOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invertImageOkButtonActionPerformed
        // TODO add your handling code here:
       save();
    }//GEN-LAST:event_invertImageOkButtonActionPerformed

    private void invertImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invertImageButtonActionPerformed
          manualDotFlag=false;
        changeCharColorFlag=false;
        lineFlagPoint1=false;
        lineFlagPoint2=false;
        modifiedImage=mBackUp;
        temp=si.getInvertImg(modifiedImage);
          image1.setIcon(new ImageIcon(Scale.scale_img(temp,352,98)));
          changeHistogram();
          parentPanel.removeAll();
        parentPanel.add(InvertImagePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        changes.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_invertImageButtonActionPerformed

    private void image1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_image1MousePressed

        if(manualDotFlag||changeCharColorFlag||lineFlagPoint1||lineFlagPoint2)//called only when manual dot or character
            //color needs to be changed or line needs to drawn
    {
        
        if(changeCharColorFlag)//for changing character color 
        {
            System.out.println("In change color panel");
    //changeCharcolor
            try
            {
                 temp=StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(temp,352,98));
               temp=si.changeColor(temp, evt.getX(),evt.getY(),c.getRGB());//actual method call for changing color
               image1.setIcon(new ImageIcon(temp));
            }
            catch(Exception e){}
        }
        else if(manualDotFlag)//for adding manual dot
        {
            System.out.println("In manual dot panel");
            //add manual dot
        int x=evt.getX();
        int y=evt.getY();
        System.out.println("x="+x+" y="+y);
//        if(b)
//            temp=modifiedImage;
//        b=false;
//       
        temp=StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(temp,352,98));
        image1.setIcon(new ImageIcon(temp));
        temp=si.addDot(temp,x,y);//actual method call for changing color
        image1.setIcon(new ImageIcon(temp));
        changeHistogram();
}
        else if(lineFlagPoint1)//for specifying point 1 of line
        {
//            if(counter==0)
//            {
//                mBackUp=modifiedImage;
//            }
//            counter++;
            System.out.println("In line1");
            //line first point
           lineFlagPoint2=true;
           lineFlagPoint1=false;
            x1=evt.getX();
            y1=evt.getY();
            messageLineAdd.setText("");
            messageLineAdd.setText("Specify the \nSecond point");
        }
        else if(lineFlagPoint2)//for specifying point 2 of line and drawing line 
        {
            System.out.println("In line2");
            //line second point
           lineFlagPoint2=false;
                lineFlagPoint1=true; 
            x2=evt.getX();
            y2=evt.getY();
             temp=StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(temp,352,98));
            temp=si.drawLine(temp,x1,y1,x2,y2,c,LineSelector.getSelectedIndex());//actual method to draw line
            image1.setIcon(new ImageIcon(temp));
            changeHistogram();
            messageLineAdd.setText("Specify First Point");
           
        }
}
        // TODO add your handling code here:
    }//GEN-LAST:event_image1MousePressed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        //
        //        JFileChooser fileChooser = new JFileChooser();
        //fileChooser.setDialogTitle("Specify a path to save");
        //fileChooser.setCurrentDirectory(new File("\\ImgOutput\\Improved Captchas\\Rotated Captchas"));
        //int userSelection = fileChooser.showSaveDialog(this);
        //
        //if (userSelection == JFileChooser.APPROVE_OPTION) {
            //    File fileToSave = fileChooser.getSelectedFile();
            //    System.out.println("Save as file: " + fileToSave.getAbsolutePath());
            save();
            util.fileWriter(modifiedImage,"ImgOutput\\ImprovedCaptchas\\","improvedCaptchas.jpg");
            JOptionPane.showMessageDialog(this,"Image saved successfully");
            // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void addLineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLineButtonActionPerformed
        mBackUp=modifiedImage;
        temp=modifiedImage;
        
        manualDotFlag=false;
        changeCharColorFlag=false;
        lineFlagPoint1=true;
        lineFlagPoint2=false;
        modifiedImage=mBackUp;
       image1.setIcon(new ImageIcon(modifiedImage));
//       mBackUp=modifiedImage;
        changes.setText("");
         parentPanel.removeAll();
        parentPanel.add(addLinePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        // TODO add your handling code here:
    }//GEN-LAST:event_addLineButtonActionPerformed

    private void changeCharColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeCharColorActionPerformed
        manualDotFlag=false;
        changeCharColorFlag=true;
        lineFlagPoint1=false;
        lineFlagPoint2=false;
        changes.setText("");
         parentPanel.removeAll();
        parentPanel.add(changeCharColorPanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        modifiedImage=mBackUp;
        image1.setIcon(new ImageIcon(modifiedImage));
        // TODO add your handling code here:
    }//GEN-LAST:event_changeCharColorActionPerformed

    private void changeBgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeBgButtonActionPerformed
        manualDotFlag=false;
        changeCharColorFlag=false;
        lineFlagPoint1=false;
        lineFlagPoint2=false;
        changes.setText("");
        modifiedImage=mBackUp;
        image1.setIcon(new ImageIcon(modifiedImage));
        parentPanel.removeAll();
        parentPanel.add(changeBgImagePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        // TODO add your handling code here:
    }//GEN-LAST:event_changeBgButtonActionPerformed

    private void binarizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binarizeButtonActionPerformed
        manualDotFlag=false;
        changeCharColorFlag=false;
        lineFlagPoint1=false;
        lineFlagPoint2=false;
        parentPanel.removeAll();
        modifiedImage=mBackUp;
       image1.setIcon(new ImageIcon(modifiedImage));
        parentPanel.add(binarizePanel);
        parentPanel.repaint();
        parentPanel.revalidate();
        inputThreshold.setText("");
        ImageInfo imgInfo=m1.getImageInfoObj();
        changes.setText("                    Suggested Threshold : "+imgInfo.threshold);
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_binarizeButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
          
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        hx.setVisible(false);
        hy.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void inputThresholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputThresholdActionPerformed
        
        try{
        changeHistogramBinarized(Integer.parseInt(inputThreshold.getText()));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(parentPanel,"Please Enter Correct Integer");
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_inputThresholdActionPerformed

    private void binarizeOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binarizeOkButtonActionPerformed
           try{
        changeHistogramBinarized(Integer.parseInt(inputThreshold.getText()));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(parentPanel,"Please Enter Correct Integer");
        }
        save();
        // TODO add your handling code here:
    }//GEN-LAST:event_binarizeOkButtonActionPerformed

    private void LineSelectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LineSelectorActionPerformed
        
        // TODO add your handling code here:
    }//GEN-LAST:event_LineSelectorActionPerformed

    private void LineSelectorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_LineSelectorItemStateChanged
 
      
// TODO add your handling code here:
    }//GEN-LAST:event_LineSelectorItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
save();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void image1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_image1MouseDragged

//        if(lineFlagPoint1)
//        {
//            //line first point
//           lineFlagPoint2=true;
//           lineFlagPoint1=false;
//            x1=evt.getX();
//            y1=evt.getY();
//            messageLineAdd.setText("");
//            messageLineAdd.setText("Specify the \nSecond point");
//        }
//        else if(lineFlagPoint2)
//        {
//            //line second point
//           lineFlagPoint2=false;
//                lineFlagPoint1=true; 
//            x2=evt.getX();
//            y2=evt.getY();
//            temp=si.drawLine(modifiedImage,x1,y1,x2,y2,c,LineSelector.getSelectedIndex());
//            image1.setIcon(new ImageIcon(temp));
//            changeHistogram();
//            messageLineAdd.setText("Specify First Point");
//        }
        // TODO add your handling code here:
    }//GEN-LAST:event_image1MouseDragged

    private void getColorValButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getColorValButtonActionPerformed
//        final JColorChooser chooser=new JColorChooser();
//       
//        class OkListener implements ActionListener
//                {
//
//            @Override
//            public void actionPerformed(ActionEvent e) 
//            {
//                c=chooser.getColor();
//                
//            }
//                        
//        }
//         JDialog co=JColorChooser.createDialog(null,"Pick a Color For Line",false,chooser,new OkListener(),null);
//         co.setVisible(true);
        showColorDialog();
       messageLineAdd.setText("Specify the\nFirst point");
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_getColorValButtonActionPerformed
private void showColorDialog()
{
         final JColorChooser chooser=new JColorChooser();
       
        class OkListener implements ActionListener
                {

            @Override
            public void actionPerformed(ActionEvent e) 
            {
                c=chooser.getColor();
            }
                        
        }
         JDialog co=JColorChooser.createDialog(null,"Pick a Color",false,chooser,new OkListener(),null);
         co.setVisible(true);
}
    private void getColorValButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getColorValButton1ActionPerformed

       showColorDialog();// TODO add your handling code here:
    }//GEN-LAST:event_getColorValButton1ActionPerformed

    private void changeCharColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeCharColorButtonActionPerformed
save();        // TODO add your handling code here:
    }//GEN-LAST:event_changeCharColorButtonActionPerformed

    private void origImgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_origImgButtonActionPerformed
         image1.setIcon(new ImageIcon(Scale.scale_img(m1.img,352,98)));
          modifiedImage=StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(m1.img,352,98));
          mBackUp=modifiedImage;
           hx.changeImage(StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(modifiedImage,352,98)));
        hy.changeImage(StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(modifiedImage,352,98)));
        // TODO add your handling code here:
    }//GEN-LAST:event_origImgButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser jcc=new JFileChooser();
        jcc.setCurrentDirectory(new java.io.File("SampleBackgroundImages\\"));
        File file1;
        BufferedImage bgImage;
        
     String s[]=new String[]{"jpg","png","gif"};
          int returnVal = jcc.showOpenDialog(this);
	            if (returnVal == JFileChooser.APPROVE_OPTION) 
	            {
                         file1 = jcc.getSelectedFile();
                        try 
                        {
                             bgImage=ImageIO.read(file1);
                             
  
    
    String f=file1.getName().toLowerCase();
      if (f.endsWith("jpg")||f.endsWith("png")||f.endsWith("gif"))
      {
          temp=si.changeBackground(modifiedImage,bgImage);
          image1.setIcon(new ImageIcon(temp));
          changeHistogram();
      }
      else
      {
        JOptionPane.showMessageDialog(this,"Please select a valid image");      
      }
    
     
  
                             
                        } 
                        catch (IOException e1) 
                        {
                            JOptionPane.showMessageDialog(rootPane, "can't read input file", null, JOptionPane.ERROR_MESSAGE);
                        }
                  }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void rotationOkButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotationOkButton1ActionPerformed
        save();
        // TODO add your handling code here:
    }//GEN-LAST:event_rotationOkButton1ActionPerformed

    private void distortedImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_distortedImageButtonActionPerformed

        parentPanel.removeAll();
        parentPanel.add(distortedPanel);
        parentPanel.repaint();
        parentPanel.revalidate();   
        image1.setIcon(new ImageIcon(temp=si.distortImage(mBackUp)));
        modifiedImage=mBackUp;
        
        changeHistogram();
        distortedMessage.setText("Image distorted");
// TODO add your handling code here:
    }//GEN-LAST:event_distortedImageButtonActionPerformed

    private void automaticDotAddButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_automaticDotAddButton1ActionPerformed
        save();
        // TODO add your handling code here:
    }//GEN-LAST:event_automaticDotAddButton1ActionPerformed

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
     hx.setState(Frame.ICONIFIED);
     hy.setState(Frame.ICONIFIED);
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowIconified

    private void formWindowDeiconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeiconified
    hx.setState(Frame.NORMAL);
    hy.setState(Frame.NORMAL);
        
// TODO add your handling code here:
    }//GEN-LAST:event_formWindowDeiconified

    private void rotate()
    {
         //BufferedImage img=null;
        temp=si.rotate(StrengthImprovementCaptcha.toBufferedImage(Scale.scale_img(modifiedImage,352,98)), rotationInput);
        image1.setIcon(new ImageIcon(temp));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Motif".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StrengthImprovementCaptcha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StrengthImprovementCaptcha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StrengthImprovementCaptcha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StrengthImprovementCaptcha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new StrengthImprovementCaptcha().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel InvertImagePanel;
    private javax.swing.JComboBox LineSelector;
    private javax.swing.JButton addDotButton;
    private javax.swing.JPanel addDotPanel;
    private javax.swing.JButton addLineButton;
    private javax.swing.JPanel addLinePanel;
    private javax.swing.JButton addManualDotOkButton;
    private javax.swing.JPanel addManualDotPanel;
    private javax.swing.JButton automaticAddDotButton;
    private javax.swing.JPanel automaticAddDotPanel;
    private javax.swing.JButton automaticDotAddButton;
    private javax.swing.JButton automaticDotAddButton1;
    private javax.swing.JLabel automaticDotIntensityCurrentVal;
    private javax.swing.JSlider automaticDotIntensitySlider;
    private javax.swing.JButton binarizeButton;
    private javax.swing.JButton binarizeOkButton;
    private javax.swing.JPanel binarizePanel;
    private javax.swing.JPanel blankPanel;
    private javax.swing.JButton changeBgButton;
    private javax.swing.JPanel changeBgImagePanel;
    private javax.swing.JButton changeCharColor;
    private javax.swing.JButton changeCharColorButton;
    private javax.swing.JPanel changeCharColorPanel;
    private javax.swing.JLabel changes;
    private javax.swing.JButton distortedImageButton;
    private javax.swing.JLabel distortedMessage;
    private javax.swing.JPanel distortedPanel;
    private javax.swing.JButton getColorValButton;
    private javax.swing.JButton getColorValButton1;
    public javax.swing.JLabel image1;
    private javax.swing.JLabel image2;
    private javax.swing.JTextField inputThreshold;
    private javax.swing.JButton invertImageButton;
    private javax.swing.JButton invertImageOkButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    public static javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton manualAddDotButton;
    private javax.swing.JTextArea messageAutomaticDotTextArea;
    private javax.swing.JTextArea messageAutomaticDotTextArea1;
    private javax.swing.JTextArea messageLineAdd;
    private javax.swing.JTextArea messageManualDotTextArea;
    private javax.swing.JTextArea messageManualDotTextArea1;
    private javax.swing.JButton origImgButton;
    private javax.swing.JPanel parentPanel;
    private javax.swing.JButton rotateButton;
    private javax.swing.JPanel rotatePanel;
    private javax.swing.JSlider rotateSlider;
    private javax.swing.JTextField rotationInputValueTextField;
    private javax.swing.JButton rotationOkButton;
    private javax.swing.JButton rotationOkButton1;
    // End of variables declaration//GEN-END:variables
}
